@model InstaEthereum.ViewModels.StepOneViewModel

@{
    ViewBag.Title = "2";
    ViewBag.ImageStepCount = "2.png";
    ViewBag.OneEthPrice = InstaEthereum.Models.Helper.parseValueIntoCurrency(Model.EthPrice);
}

<div class="content-div">
    @using (@Html.BeginForm("StepOneProcess", "BuyEthereum", FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        <div class="row">
            <div class="col-md-12 col-12 col-sm-12 col-lg-12 col-xl-12">
                <h5 id="card-header">Enter Ethereum Quantity To Buy</h5>
            </div>
        </div>
        <div class="divider"></div>
        <div class="row" style="width: 80%; margin: 0 auto;">
            <div class="col-md-12 col-12 col-sm-12 col-lg-12 col-xl-12" style="margin-top: 60px;">
                @Html.TextBoxFor(m => m.EthereumQty, new { @class = "form-control my-form-control", placeholder = "Enter ETH", style="width:100%" })
            </div>
        </div>
        <div class="row" style="width: 80%; margin: 0 auto;">
            <div class="col-md-12 col-12 col-sm-12 col-lg-12 col-xl-12" style="margin-top: 15px;">
                @Html.TextBoxFor(m => m.EthereumINR, new { @class = "form-control my-form-control", placeholder = "Enter INR", style = "width:100%" })
            </div>
        </div>
        <div class="row">
            <div class="col-md-12 col-12 col-sm-12 col-lg-12 col-xl-12">
                <p id="input-info">Minimum purchase of @Model.MinEthBuy ETH and maximum @Model.MaxEthBuy ETH</p>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12 col-12 col-sm-12 col-lg-12 col-xl-12 text-center">
                <button type="submit" class="btn btn-primary" style="margin-top: 60px; width: 200px; padding: 15px 0;">CONTINUE</button>
            </div>
        </div>
    }
</div>

<input type="hidden" id="EthPrice" value="@Model.EthPrice" />

@section Scripts
{   
    <script>
        $(document).ready(function () {
            $("#EthereumQty").keyup(function () {                
                var ethQty = Number($(this).val());
                var ethINR = Number($("#EthPrice").val()) * ethQty;

                $("#EthereumINR").val(ethINR.toFixed(2));
            })  

            $("#EthereumINR").keyup(function () {
                var ethINR = Number($(this).val());
                var ethQty = ethINR / Number($("#EthPrice").val());

                $("#EthereumQty").val(ethQty.toFixed(2));
            })  
        });
    </script>   
}